# Generated by Django 5.0.2 on 2024-02-24 19:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("base", "0007_remove_bookclub_member_list_member_delete_memberlist"),
        ("users", "0004_profile_read_list_profile_reading_list_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ReadingList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.book",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.profile"
                    ),
                ),
            ],
            options={
                "unique_together": {("profile", "book")},
            },
        ),
        migrations.AlterField(
            model_name="profile",
            name="reading_list",
            field=models.ManyToManyField(
                blank=True,
                related_name="reading_list",
                through="users.ReadingList",
                to="base.book",
            ),
        ),
        migrations.CreateModel(
            name="ReadList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.book",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.profile"
                    ),
                ),
            ],
            options={
                "unique_together": {("profile", "book")},
            },
        ),
        migrations.AlterField(
            model_name="profile",
            name="read_list",
            field=models.ManyToManyField(
                blank=True,
                related_name="read_list",
                through="users.ReadList",
                to="base.book",
            ),
        ),
        migrations.CreateModel(
            name="TBRList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="base.book",
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.profile"
                    ),
                ),
            ],
            options={
                "unique_together": {("profile", "book")},
            },
        ),
        migrations.AlterField(
            model_name="profile",
            name="tbr_list",
            field=models.ManyToManyField(
                blank=True,
                related_name="tbr_list",
                through="users.TBRList",
                to="base.book",
            ),
        ),
    ]
